ARM GAS  /tmp/ccLVjmxg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB136:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include <stdio.h>
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccLVjmxg.s 			page 2


  32:Src/main.c    **** /* USER CODE BEGIN PTD */
  33:Src/main.c    **** #ifdef __GNUC__
  34:Src/main.c    ****   /* With GCC, small printf (option LD Linker->Libraries->Small printf
  35:Src/main.c    ****      set to 'Yes') calls __io_putchar() */
  36:Src/main.c    ****   #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  37:Src/main.c    **** #else
  38:Src/main.c    ****   #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  39:Src/main.c    **** #endif /* __GNUC__ */
  40:Src/main.c    **** /* USER CODE END PTD */
  41:Src/main.c    **** /* USER CODE END PTD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PD */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  49:Src/main.c    **** /* USER CODE BEGIN PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PM */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** UART_HandleTypeDef huart2;
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE BEGIN PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** static void MX_GPIO_Init(void);
  63:Src/main.c    **** static void MX_USART2_UART_Init(void);
  64:Src/main.c    **** /* USER CODE BEGIN PFP */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  69:Src/main.c    **** /* USER CODE BEGIN 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** /**
  74:Src/main.c    ****   * @brief  The application entry point.
  75:Src/main.c    ****   * @retval int
  76:Src/main.c    ****   */
  77:Src/main.c    **** int main(void)
  78:Src/main.c    **** {
  79:Src/main.c    ****   /* USER CODE BEGIN 1 */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END 1 */
  82:Src/main.c    **** 
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Src/main.c    ****   HAL_Init();
  88:Src/main.c    **** 
ARM GAS  /tmp/ccLVjmxg.s 			page 3


  89:Src/main.c    ****   /* USER CODE BEGIN Init */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END Init */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Configure the system clock */
  94:Src/main.c    ****   SystemClock_Config();
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Initialize all configured peripherals */
 101:Src/main.c    ****   MX_GPIO_Init();
 102:Src/main.c    ****   MX_USART2_UART_Init();
 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END 2 */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Infinite loop */
 108:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 109:Src/main.c    ****   while (1)
 110:Src/main.c    ****   {
 111:Src/main.c    ****     /* USER CODE END WHILE */
 112:Src/main.c    **** 
 113:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);
 114:Src/main.c    ****     HAL_Delay(100);
 115:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);
 116:Src/main.c    ****     HAL_Delay(100);
 117:Src/main.c    **** 	  printf("Hello world\r\n");
 118:Src/main.c    **** 	  HAL_Delay(1000);
 119:Src/main.c    ****     /* USER CODE BEGIN 3 */
 120:Src/main.c    ****   }
 121:Src/main.c    ****   /* USER CODE END 3 */
 122:Src/main.c    **** }
 123:Src/main.c    **** 
 124:Src/main.c    **** /**
 125:Src/main.c    ****   * @brief System Clock Configuration
 126:Src/main.c    ****   * @retval None
 127:Src/main.c    ****   */
 128:Src/main.c    **** void SystemClock_Config(void)
 129:Src/main.c    **** {
 130:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Src/main.c    **** 
 133:Src/main.c    ****   /** Configure the main internal regulator output voltage
 134:Src/main.c    ****   */
 135:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 136:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 137:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 138:Src/main.c    ****   */
 139:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
ARM GAS  /tmp/ccLVjmxg.s 			page 4


 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Src/main.c    ****   {
 150:Src/main.c    ****     Error_Handler();
 151:Src/main.c    ****   }
 152:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 153:Src/main.c    ****   */
 154:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Src/main.c    **** 
 161:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 162:Src/main.c    ****   {
 163:Src/main.c    ****     Error_Handler();
 164:Src/main.c    ****   }
 165:Src/main.c    **** }
 166:Src/main.c    **** 
 167:Src/main.c    **** /**
 168:Src/main.c    ****   * @brief USART2 Initialization Function
 169:Src/main.c    ****   * @param None
 170:Src/main.c    ****   * @retval None
 171:Src/main.c    ****   */
 172:Src/main.c    **** static void MX_USART2_UART_Init(void)
 173:Src/main.c    **** {
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 178:Src/main.c    **** 
 179:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 182:Src/main.c    ****   huart2.Instance = USART2;
 183:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 184:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 185:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 186:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 187:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 188:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 189:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 190:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 191:Src/main.c    ****   {
 192:Src/main.c    ****     Error_Handler();
 193:Src/main.c    ****   }
 194:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 197:Src/main.c    **** 
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** /**
 201:Src/main.c    ****   * @brief GPIO Initialization Function
 202:Src/main.c    ****   * @param None
ARM GAS  /tmp/ccLVjmxg.s 			page 5


 203:Src/main.c    ****   * @retval None
 204:Src/main.c    ****   */
 205:Src/main.c    **** static void MX_GPIO_Init(void)
 206:Src/main.c    **** {
  28              		.loc 1 206 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 207:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 207 3 view .LVU1
  42              		.loc 1 207 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 208:Src/main.c    **** 
 209:Src/main.c    ****   /* GPIO Ports Clock Enable */
 210:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 210 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 210 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 210 3 view .LVU5
  54 0012 224B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 210 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 210 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE2:
 211:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  65              		.loc 1 211 3 view .LVU8
  66              	.LBB3:
  67              		.loc 1 211 3 view .LVU9
  68 0026 0294     		str	r4, [sp, #8]
  69              		.loc 1 211 3 view .LVU10
  70 0028 1A6B     		ldr	r2, [r3, #48]
  71 002a 42F08002 		orr	r2, r2, #128
  72 002e 1A63     		str	r2, [r3, #48]
  73              		.loc 1 211 3 view .LVU11
  74 0030 1A6B     		ldr	r2, [r3, #48]
  75 0032 02F08002 		and	r2, r2, #128
ARM GAS  /tmp/ccLVjmxg.s 			page 6


  76 0036 0292     		str	r2, [sp, #8]
  77              		.loc 1 211 3 view .LVU12
  78 0038 029A     		ldr	r2, [sp, #8]
  79              	.LBE3:
 212:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 212 3 view .LVU13
  81              	.LBB4:
  82              		.loc 1 212 3 view .LVU14
  83 003a 0394     		str	r4, [sp, #12]
  84              		.loc 1 212 3 view .LVU15
  85 003c 1A6B     		ldr	r2, [r3, #48]
  86 003e 42F00102 		orr	r2, r2, #1
  87 0042 1A63     		str	r2, [r3, #48]
  88              		.loc 1 212 3 view .LVU16
  89 0044 1A6B     		ldr	r2, [r3, #48]
  90 0046 02F00102 		and	r2, r2, #1
  91 004a 0392     		str	r2, [sp, #12]
  92              		.loc 1 212 3 view .LVU17
  93 004c 039A     		ldr	r2, [sp, #12]
  94              	.LBE4:
 213:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  95              		.loc 1 213 3 view .LVU18
  96              	.LBB5:
  97              		.loc 1 213 3 view .LVU19
  98 004e 0494     		str	r4, [sp, #16]
  99              		.loc 1 213 3 view .LVU20
 100 0050 1A6B     		ldr	r2, [r3, #48]
 101 0052 42F00202 		orr	r2, r2, #2
 102 0056 1A63     		str	r2, [r3, #48]
 103              		.loc 1 213 3 view .LVU21
 104 0058 1B6B     		ldr	r3, [r3, #48]
 105 005a 03F00203 		and	r3, r3, #2
 106 005e 0493     		str	r3, [sp, #16]
 107              		.loc 1 213 3 view .LVU22
 108 0060 049B     		ldr	r3, [sp, #16]
 109              	.LBE5:
 214:Src/main.c    **** 
 215:Src/main.c    ****   /*Configure GPIO pin Output Level */
 216:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 110              		.loc 1 216 3 view .LVU23
 111 0062 0F4D     		ldr	r5, .L3+4
 112 0064 2246     		mov	r2, r4
 113 0066 2021     		movs	r1, #32
 114 0068 2846     		mov	r0, r5
 115 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 116              	.LVL0:
 217:Src/main.c    **** 
 218:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 219:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 117              		.loc 1 219 3 view .LVU24
 118              		.loc 1 219 23 is_stmt 0 view .LVU25
 119 006e 4FF40053 		mov	r3, #8192
 120 0072 0593     		str	r3, [sp, #20]
 220:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 121              		.loc 1 220 3 is_stmt 1 view .LVU26
 122              		.loc 1 220 24 is_stmt 0 view .LVU27
 123 0074 0B4B     		ldr	r3, .L3+8
ARM GAS  /tmp/ccLVjmxg.s 			page 7


 124 0076 0693     		str	r3, [sp, #24]
 221:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 125              		.loc 1 221 3 is_stmt 1 view .LVU28
 126              		.loc 1 221 24 is_stmt 0 view .LVU29
 127 0078 0794     		str	r4, [sp, #28]
 222:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 128              		.loc 1 222 3 is_stmt 1 view .LVU30
 129 007a 05A9     		add	r1, sp, #20
 130 007c 0A48     		ldr	r0, .L3+12
 131 007e FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL1:
 223:Src/main.c    **** 
 224:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 225:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 133              		.loc 1 225 3 view .LVU31
 134              		.loc 1 225 23 is_stmt 0 view .LVU32
 135 0082 2023     		movs	r3, #32
 136 0084 0593     		str	r3, [sp, #20]
 226:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 137              		.loc 1 226 3 is_stmt 1 view .LVU33
 138              		.loc 1 226 24 is_stmt 0 view .LVU34
 139 0086 0123     		movs	r3, #1
 140 0088 0693     		str	r3, [sp, #24]
 227:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 141              		.loc 1 227 3 is_stmt 1 view .LVU35
 142              		.loc 1 227 24 is_stmt 0 view .LVU36
 143 008a 0794     		str	r4, [sp, #28]
 228:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 144              		.loc 1 228 3 is_stmt 1 view .LVU37
 145              		.loc 1 228 25 is_stmt 0 view .LVU38
 146 008c 0894     		str	r4, [sp, #32]
 229:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 147              		.loc 1 229 3 is_stmt 1 view .LVU39
 148 008e 05A9     		add	r1, sp, #20
 149 0090 2846     		mov	r0, r5
 150 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 151              	.LVL2:
 230:Src/main.c    **** 
 231:Src/main.c    **** }
 152              		.loc 1 231 1 is_stmt 0 view .LVU40
 153 0096 0BB0     		add	sp, sp, #44
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 12
 156              		@ sp needed
 157 0098 30BD     		pop	{r4, r5, pc}
 158              	.L4:
 159 009a 00BF     		.align	2
 160              	.L3:
 161 009c 00380240 		.word	1073887232
 162 00a0 00000240 		.word	1073872896
 163 00a4 00002110 		.word	270598144
 164 00a8 00080240 		.word	1073874944
 165              		.cfi_endproc
 166              	.LFE136:
 168              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 169              		.align	1
 170              		.syntax unified
ARM GAS  /tmp/ccLVjmxg.s 			page 8


 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	MX_USART2_UART_Init:
 176              	.LFB135:
 173:Src/main.c    **** 
 177              		.loc 1 173 1 is_stmt 1 view -0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 08B5     		push	{r3, lr}
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 3, -8
 185              		.cfi_offset 14, -4
 182:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 186              		.loc 1 182 3 view .LVU42
 182:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 187              		.loc 1 182 19 is_stmt 0 view .LVU43
 188 0002 0848     		ldr	r0, .L7
 189 0004 084B     		ldr	r3, .L7+4
 190 0006 0360     		str	r3, [r0]
 183:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 191              		.loc 1 183 3 is_stmt 1 view .LVU44
 183:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 192              		.loc 1 183 24 is_stmt 0 view .LVU45
 193 0008 4FF4E133 		mov	r3, #115200
 194 000c 4360     		str	r3, [r0, #4]
 184:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 195              		.loc 1 184 3 is_stmt 1 view .LVU46
 184:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 196              		.loc 1 184 26 is_stmt 0 view .LVU47
 197 000e 0023     		movs	r3, #0
 198 0010 8360     		str	r3, [r0, #8]
 185:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 199              		.loc 1 185 3 is_stmt 1 view .LVU48
 185:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 200              		.loc 1 185 24 is_stmt 0 view .LVU49
 201 0012 C360     		str	r3, [r0, #12]
 186:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 202              		.loc 1 186 3 is_stmt 1 view .LVU50
 186:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 203              		.loc 1 186 22 is_stmt 0 view .LVU51
 204 0014 0361     		str	r3, [r0, #16]
 187:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 205              		.loc 1 187 3 is_stmt 1 view .LVU52
 187:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 206              		.loc 1 187 20 is_stmt 0 view .LVU53
 207 0016 0C22     		movs	r2, #12
 208 0018 4261     		str	r2, [r0, #20]
 188:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 209              		.loc 1 188 3 is_stmt 1 view .LVU54
 188:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 210              		.loc 1 188 25 is_stmt 0 view .LVU55
 211 001a 8361     		str	r3, [r0, #24]
 189:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 212              		.loc 1 189 3 is_stmt 1 view .LVU56
ARM GAS  /tmp/ccLVjmxg.s 			page 9


 189:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 213              		.loc 1 189 28 is_stmt 0 view .LVU57
 214 001c C361     		str	r3, [r0, #28]
 190:Src/main.c    ****   {
 215              		.loc 1 190 3 is_stmt 1 view .LVU58
 190:Src/main.c    ****   {
 216              		.loc 1 190 7 is_stmt 0 view .LVU59
 217 001e FFF7FEFF 		bl	HAL_UART_Init
 218              	.LVL3:
 198:Src/main.c    **** 
 219              		.loc 1 198 1 view .LVU60
 220 0022 08BD     		pop	{r3, pc}
 221              	.L8:
 222              		.align	2
 223              	.L7:
 224 0024 00000000 		.word	huart2
 225 0028 00440040 		.word	1073759232
 226              		.cfi_endproc
 227              	.LFE135:
 229              		.section	.text.SystemClock_Config,"ax",%progbits
 230              		.align	1
 231              		.global	SystemClock_Config
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv4-sp-d16
 237              	SystemClock_Config:
 238              	.LFB134:
 129:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 239              		.loc 1 129 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 80
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243 0000 30B5     		push	{r4, r5, lr}
 244              	.LCFI4:
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 5, -8
 248              		.cfi_offset 14, -4
 249 0002 95B0     		sub	sp, sp, #84
 250              	.LCFI5:
 251              		.cfi_def_cfa_offset 96
 130:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 252              		.loc 1 130 3 view .LVU62
 130:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 253              		.loc 1 130 22 is_stmt 0 view .LVU63
 254 0004 3022     		movs	r2, #48
 255 0006 0021     		movs	r1, #0
 256 0008 08A8     		add	r0, sp, #32
 257 000a FFF7FEFF 		bl	memset
 258              	.LVL4:
 131:Src/main.c    **** 
 259              		.loc 1 131 3 is_stmt 1 view .LVU64
 131:Src/main.c    **** 
 260              		.loc 1 131 22 is_stmt 0 view .LVU65
 261 000e 0024     		movs	r4, #0
 262 0010 0394     		str	r4, [sp, #12]
ARM GAS  /tmp/ccLVjmxg.s 			page 10


 263 0012 0494     		str	r4, [sp, #16]
 264 0014 0594     		str	r4, [sp, #20]
 265 0016 0694     		str	r4, [sp, #24]
 266 0018 0794     		str	r4, [sp, #28]
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 267              		.loc 1 135 3 is_stmt 1 view .LVU66
 268              	.LBB6:
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 269              		.loc 1 135 3 view .LVU67
 270 001a 0194     		str	r4, [sp, #4]
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 271              		.loc 1 135 3 view .LVU68
 272 001c 1B4B     		ldr	r3, .L11
 273 001e 1A6C     		ldr	r2, [r3, #64]
 274 0020 42F08052 		orr	r2, r2, #268435456
 275 0024 1A64     		str	r2, [r3, #64]
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 276              		.loc 1 135 3 view .LVU69
 277 0026 1B6C     		ldr	r3, [r3, #64]
 278 0028 03F08053 		and	r3, r3, #268435456
 279 002c 0193     		str	r3, [sp, #4]
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 280              		.loc 1 135 3 view .LVU70
 281 002e 019B     		ldr	r3, [sp, #4]
 282              	.LBE6:
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 283              		.loc 1 136 3 view .LVU71
 284              	.LBB7:
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 285              		.loc 1 136 3 view .LVU72
 286 0030 0294     		str	r4, [sp, #8]
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 287              		.loc 1 136 3 view .LVU73
 288 0032 174A     		ldr	r2, .L11+4
 289 0034 1368     		ldr	r3, [r2]
 290 0036 23F44043 		bic	r3, r3, #49152
 291 003a 43F40043 		orr	r3, r3, #32768
 292 003e 1360     		str	r3, [r2]
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 293              		.loc 1 136 3 view .LVU74
 294 0040 1368     		ldr	r3, [r2]
 295 0042 03F44043 		and	r3, r3, #49152
 296 0046 0293     		str	r3, [sp, #8]
 136:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 297              		.loc 1 136 3 view .LVU75
 298 0048 029B     		ldr	r3, [sp, #8]
 299              	.LBE7:
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 300              		.loc 1 139 3 view .LVU76
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 301              		.loc 1 139 36 is_stmt 0 view .LVU77
 302 004a 0225     		movs	r5, #2
 303 004c 0895     		str	r5, [sp, #32]
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 304              		.loc 1 140 3 is_stmt 1 view .LVU78
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 305              		.loc 1 140 30 is_stmt 0 view .LVU79
ARM GAS  /tmp/ccLVjmxg.s 			page 11


 306 004e 0123     		movs	r3, #1
 307 0050 0B93     		str	r3, [sp, #44]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 308              		.loc 1 141 3 is_stmt 1 view .LVU80
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 309              		.loc 1 141 41 is_stmt 0 view .LVU81
 310 0052 1023     		movs	r3, #16
 311 0054 0C93     		str	r3, [sp, #48]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 312              		.loc 1 142 3 is_stmt 1 view .LVU82
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 313              		.loc 1 142 34 is_stmt 0 view .LVU83
 314 0056 0E95     		str	r5, [sp, #56]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 315              		.loc 1 143 3 is_stmt 1 view .LVU84
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 316              		.loc 1 143 35 is_stmt 0 view .LVU85
 317 0058 0F94     		str	r4, [sp, #60]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 318              		.loc 1 144 3 is_stmt 1 view .LVU86
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 319              		.loc 1 144 30 is_stmt 0 view .LVU87
 320 005a 1093     		str	r3, [sp, #64]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 321              		.loc 1 145 3 is_stmt 1 view .LVU88
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 322              		.loc 1 145 30 is_stmt 0 view .LVU89
 323 005c 4FF4A873 		mov	r3, #336
 324 0060 1193     		str	r3, [sp, #68]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 325              		.loc 1 146 3 is_stmt 1 view .LVU90
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 326              		.loc 1 146 30 is_stmt 0 view .LVU91
 327 0062 0423     		movs	r3, #4
 328 0064 1293     		str	r3, [sp, #72]
 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 329              		.loc 1 147 3 is_stmt 1 view .LVU92
 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 330              		.loc 1 147 30 is_stmt 0 view .LVU93
 331 0066 0723     		movs	r3, #7
 332 0068 1393     		str	r3, [sp, #76]
 148:Src/main.c    ****   {
 333              		.loc 1 148 3 is_stmt 1 view .LVU94
 148:Src/main.c    ****   {
 334              		.loc 1 148 7 is_stmt 0 view .LVU95
 335 006a 08A8     		add	r0, sp, #32
 336 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 337              	.LVL5:
 154:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 338              		.loc 1 154 3 is_stmt 1 view .LVU96
 154:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 339              		.loc 1 154 31 is_stmt 0 view .LVU97
 340 0070 0F23     		movs	r3, #15
 341 0072 0393     		str	r3, [sp, #12]
 156:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 342              		.loc 1 156 3 is_stmt 1 view .LVU98
 156:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccLVjmxg.s 			page 12


 343              		.loc 1 156 34 is_stmt 0 view .LVU99
 344 0074 0495     		str	r5, [sp, #16]
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 345              		.loc 1 157 3 is_stmt 1 view .LVU100
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 346              		.loc 1 157 35 is_stmt 0 view .LVU101
 347 0076 0594     		str	r4, [sp, #20]
 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 348              		.loc 1 158 3 is_stmt 1 view .LVU102
 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 349              		.loc 1 158 36 is_stmt 0 view .LVU103
 350 0078 4FF48053 		mov	r3, #4096
 351 007c 0693     		str	r3, [sp, #24]
 159:Src/main.c    **** 
 352              		.loc 1 159 3 is_stmt 1 view .LVU104
 159:Src/main.c    **** 
 353              		.loc 1 159 36 is_stmt 0 view .LVU105
 354 007e 0794     		str	r4, [sp, #28]
 161:Src/main.c    ****   {
 355              		.loc 1 161 3 is_stmt 1 view .LVU106
 161:Src/main.c    ****   {
 356              		.loc 1 161 7 is_stmt 0 view .LVU107
 357 0080 2946     		mov	r1, r5
 358 0082 03A8     		add	r0, sp, #12
 359 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 360              	.LVL6:
 165:Src/main.c    **** 
 361              		.loc 1 165 1 view .LVU108
 362 0088 15B0     		add	sp, sp, #84
 363              	.LCFI6:
 364              		.cfi_def_cfa_offset 12
 365              		@ sp needed
 366 008a 30BD     		pop	{r4, r5, pc}
 367              	.L12:
 368              		.align	2
 369              	.L11:
 370 008c 00380240 		.word	1073887232
 371 0090 00700040 		.word	1073770496
 372              		.cfi_endproc
 373              	.LFE134:
 375              		.section	.text.main,"ax",%progbits
 376              		.align	1
 377              		.global	main
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv4-sp-d16
 383              	main:
 384              	.LFB133:
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
 385              		.loc 1 78 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ Volatile: function does not return.
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 08B5     		push	{r3, lr}
 391              	.LCFI7:
ARM GAS  /tmp/ccLVjmxg.s 			page 13


 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 3, -8
 394              		.cfi_offset 14, -4
  87:Src/main.c    **** 
 395              		.loc 1 87 3 view .LVU110
 396 0002 FFF7FEFF 		bl	HAL_Init
 397              	.LVL7:
  94:Src/main.c    **** 
 398              		.loc 1 94 3 view .LVU111
 399 0006 FFF7FEFF 		bl	SystemClock_Config
 400              	.LVL8:
 101:Src/main.c    ****   MX_USART2_UART_Init();
 401              		.loc 1 101 3 view .LVU112
 402 000a FFF7FEFF 		bl	MX_GPIO_Init
 403              	.LVL9:
 102:Src/main.c    ****   /* USER CODE BEGIN 2 */
 404              		.loc 1 102 3 view .LVU113
 405 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 406              	.LVL10:
 407              	.L14:
 109:Src/main.c    ****   {
 408              		.loc 1 109 3 discriminator 1 view .LVU114
 113:Src/main.c    ****     HAL_Delay(100);
 409              		.loc 1 113 5 discriminator 1 view .LVU115
 410 0012 0C4C     		ldr	r4, .L16
 411 0014 0122     		movs	r2, #1
 412 0016 2021     		movs	r1, #32
 413 0018 2046     		mov	r0, r4
 414 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 415              	.LVL11:
 114:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);
 416              		.loc 1 114 5 discriminator 1 view .LVU116
 417 001e 6420     		movs	r0, #100
 418 0020 FFF7FEFF 		bl	HAL_Delay
 419              	.LVL12:
 115:Src/main.c    ****     HAL_Delay(100);
 420              		.loc 1 115 5 discriminator 1 view .LVU117
 421 0024 0022     		movs	r2, #0
 422 0026 2021     		movs	r1, #32
 423 0028 2046     		mov	r0, r4
 424 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 425              	.LVL13:
 116:Src/main.c    **** 	  printf("Hello world\r\n");
 426              		.loc 1 116 5 discriminator 1 view .LVU118
 427 002e 6420     		movs	r0, #100
 428 0030 FFF7FEFF 		bl	HAL_Delay
 429              	.LVL14:
 117:Src/main.c    **** 	  HAL_Delay(1000);
 430              		.loc 1 117 4 discriminator 1 view .LVU119
 431 0034 0448     		ldr	r0, .L16+4
 432 0036 FFF7FEFF 		bl	puts
 433              	.LVL15:
 118:Src/main.c    ****     /* USER CODE BEGIN 3 */
 434              		.loc 1 118 4 discriminator 1 view .LVU120
 435 003a 4FF47A70 		mov	r0, #1000
 436 003e FFF7FEFF 		bl	HAL_Delay
 437              	.LVL16:
ARM GAS  /tmp/ccLVjmxg.s 			page 14


 438 0042 E6E7     		b	.L14
 439              	.L17:
 440              		.align	2
 441              	.L16:
 442 0044 00000240 		.word	1073872896
 443 0048 00000000 		.word	.LC0
 444              		.cfi_endproc
 445              	.LFE133:
 447              		.section	.text.__io_putchar,"ax",%progbits
 448              		.align	1
 449              		.global	__io_putchar
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	__io_putchar:
 456              	.LVL17:
 457              	.LFB137:
 232:Src/main.c    **** 
 233:Src/main.c    **** /* USER CODE BEGIN 4 */
 234:Src/main.c    **** PUTCHAR_PROTOTYPE
 235:Src/main.c    **** {
 458              		.loc 1 235 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		.loc 1 235 1 is_stmt 0 view .LVU122
 463 0000 00B5     		push	{lr}
 464              	.LCFI8:
 465              		.cfi_def_cfa_offset 4
 466              		.cfi_offset 14, -4
 467 0002 83B0     		sub	sp, sp, #12
 468              	.LCFI9:
 469              		.cfi_def_cfa_offset 16
 470 0004 0190     		str	r0, [sp, #4]
 236:Src/main.c    ****   /* Place your implementation of fputc here */
 237:Src/main.c    ****   /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
 238:Src/main.c    ****   HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, 0xFFFF);
 471              		.loc 1 238 3 is_stmt 1 view .LVU123
 472 0006 4FF6FF73 		movw	r3, #65535
 473 000a 0122     		movs	r2, #1
 474 000c 01A9     		add	r1, sp, #4
 475 000e 0348     		ldr	r0, .L20
 476              	.LVL18:
 477              		.loc 1 238 3 is_stmt 0 view .LVU124
 478 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 479              	.LVL19:
 239:Src/main.c    **** 
 240:Src/main.c    ****   return ch;
 480              		.loc 1 240 3 is_stmt 1 view .LVU125
 241:Src/main.c    **** }
 481              		.loc 1 241 1 is_stmt 0 view .LVU126
 482 0014 0198     		ldr	r0, [sp, #4]
 483 0016 03B0     		add	sp, sp, #12
 484              	.LCFI10:
 485              		.cfi_def_cfa_offset 4
 486              		@ sp needed
ARM GAS  /tmp/ccLVjmxg.s 			page 15


 487 0018 5DF804FB 		ldr	pc, [sp], #4
 488              	.L21:
 489              		.align	2
 490              	.L20:
 491 001c 00000000 		.word	huart2
 492              		.cfi_endproc
 493              	.LFE137:
 495              		.section	.text.Error_Handler,"ax",%progbits
 496              		.align	1
 497              		.global	Error_Handler
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv4-sp-d16
 503              	Error_Handler:
 504              	.LFB138:
 242:Src/main.c    **** /* USER CODE END 4 */
 243:Src/main.c    **** 
 244:Src/main.c    **** /**
 245:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 246:Src/main.c    ****   * @retval None
 247:Src/main.c    ****   */
 248:Src/main.c    **** void Error_Handler(void)
 249:Src/main.c    **** {
 505              		.loc 1 249 1 is_stmt 1 view -0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 250:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 251:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 254:Src/main.c    **** }
 510              		.loc 1 254 1 view .LVU128
 511 0000 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE138:
 515              		.comm	huart2,64,4
 516              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 517              		.align	2
 518              	.LC0:
 519 0000 48656C6C 		.ascii	"Hello world\015\000"
 519      6F20776F 
 519      726C640D 
 519      00
 520              		.text
 521              	.Letext0:
 522              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 523              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 524              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 525              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 526              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 527              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 528              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 529              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 530              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/ccLVjmxg.s 			page 16


 531              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 532              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 533              		.file 13 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stddef.h"
 534              		.file 14 "/usr/arm-none-eabi/include/sys/_types.h"
 535              		.file 15 "/usr/arm-none-eabi/include/sys/reent.h"
 536              		.file 16 "/usr/arm-none-eabi/include/sys/lock.h"
 537              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 538              		.file 18 "<built-in>"
ARM GAS  /tmp/ccLVjmxg.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLVjmxg.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccLVjmxg.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccLVjmxg.s:161    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/ccLVjmxg.s:169    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccLVjmxg.s:175    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccLVjmxg.s:224    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccLVjmxg.s:230    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLVjmxg.s:237    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLVjmxg.s:370    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccLVjmxg.s:376    .text.main:0000000000000000 $t
     /tmp/ccLVjmxg.s:383    .text.main:0000000000000000 main
     /tmp/ccLVjmxg.s:442    .text.main:0000000000000044 $d
     /tmp/ccLVjmxg.s:448    .text.__io_putchar:0000000000000000 $t
     /tmp/ccLVjmxg.s:455    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccLVjmxg.s:491    .text.__io_putchar:000000000000001c $d
     /tmp/ccLVjmxg.s:496    .text.Error_Handler:0000000000000000 $t
     /tmp/ccLVjmxg.s:503    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLVjmxg.s:517    .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
puts
HAL_UART_Transmit
