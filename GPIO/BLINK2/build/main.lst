ARM GAS  /tmp/ccFp41Bs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB132:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/ccFp41Bs.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** static void MX_GPIO_Init(void);
  53:Src/main.c    **** /* USER CODE BEGIN PFP */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN 0 */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /**
  63:Src/main.c    ****   * @brief  The application entry point.
  64:Src/main.c    ****   * @retval int
  65:Src/main.c    ****   */
  66:Src/main.c    **** int main(void)
  67:Src/main.c    **** {
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE END 1 */
  71:Src/main.c    **** 
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Src/main.c    ****   HAL_Init();
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Configure the system clock */
  83:Src/main.c    ****   SystemClock_Config();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END SysInit */
  88:Src/main.c    **** 
ARM GAS  /tmp/ccFp41Bs.s 			page 3


  89:Src/main.c    ****   /* Initialize all configured peripherals */
  90:Src/main.c    ****   MX_GPIO_Init();
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END 2 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Infinite loop */
  96:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  97:Src/main.c    ****   while (1)
  98:Src/main.c    ****   {
  99:Src/main.c    ****     /* USER CODE END WHILE */
 100:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 101:Src/main.c    ****     HAL_Delay(1000);
 102:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 103:Src/main.c    ****     HAL_Delay(1000);
 104:Src/main.c    **** 
 105:Src/main.c    ****   //  HAL_delay(500);
 106:Src/main.c    ****     /* USER CODE BEGIN 3 */
 107:Src/main.c    ****   }
 108:Src/main.c    ****   /* USER CODE END 3 */
 109:Src/main.c    **** }
 110:Src/main.c    **** 
 111:Src/main.c    **** /**
 112:Src/main.c    ****   * @brief System Clock Configuration
 113:Src/main.c    ****   * @retval None
 114:Src/main.c    ****   */
 115:Src/main.c    **** void SystemClock_Config(void)
 116:Src/main.c    **** {
 117:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119:Src/main.c    **** 
 120:Src/main.c    ****   /** Configure the main internal regulator output voltage
 121:Src/main.c    ****   */
 122:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 123:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 125:Src/main.c    ****   */
 126:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 127:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 128:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 64;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 135:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 136:Src/main.c    ****   {
 137:Src/main.c    ****     Error_Handler();
 138:Src/main.c    ****   }
 139:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 140:Src/main.c    ****   */
 141:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 144:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 145:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccFp41Bs.s 			page 4


 146:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147:Src/main.c    **** 
 148:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 149:Src/main.c    ****   {
 150:Src/main.c    ****     Error_Handler();
 151:Src/main.c    ****   }
 152:Src/main.c    **** }
 153:Src/main.c    **** 
 154:Src/main.c    **** /**
 155:Src/main.c    ****   * @brief GPIO Initialization Function
 156:Src/main.c    ****   * @param None
 157:Src/main.c    ****   * @retval None
 158:Src/main.c    ****   */
 159:Src/main.c    **** static void MX_GPIO_Init(void)
 160:Src/main.c    **** {
  28              		.loc 1 160 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 40
 161:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 161 3 view .LVU1
  42              		.loc 1 161 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0194     		str	r4, [sp, #4]
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 162:Src/main.c    **** 
 163:Src/main.c    ****   /* GPIO Ports Clock Enable */
 164:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 164 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 164 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 164 3 view .LVU5
  54 0012 0E4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00102 		orr	r2, r2, #1
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 164 3 view .LVU6
  59 001c 1B6B     		ldr	r3, [r3, #48]
  60 001e 03F00103 		and	r3, r3, #1
  61 0022 0093     		str	r3, [sp]
  62              		.loc 1 164 3 view .LVU7
  63 0024 009B     		ldr	r3, [sp]
  64              	.LBE2:
 165:Src/main.c    **** 
ARM GAS  /tmp/ccFp41Bs.s 			page 5


 166:Src/main.c    ****   /*Configure GPIO pin Output Level */
 167:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  65              		.loc 1 167 3 view .LVU8
  66 0026 0A4D     		ldr	r5, .L3+4
  67 0028 2246     		mov	r2, r4
  68 002a 2021     		movs	r1, #32
  69 002c 2846     		mov	r0, r5
  70 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
  71              	.LVL0:
 168:Src/main.c    **** 
 169:Src/main.c    ****   /*Configure GPIO pin : PA5 */
 170:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
  72              		.loc 1 170 3 view .LVU9
  73              		.loc 1 170 23 is_stmt 0 view .LVU10
  74 0032 2023     		movs	r3, #32
  75 0034 0193     		str	r3, [sp, #4]
 171:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  76              		.loc 1 171 3 is_stmt 1 view .LVU11
  77              		.loc 1 171 24 is_stmt 0 view .LVU12
  78 0036 0123     		movs	r3, #1
  79 0038 0293     		str	r3, [sp, #8]
 172:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  80              		.loc 1 172 3 is_stmt 1 view .LVU13
  81              		.loc 1 172 24 is_stmt 0 view .LVU14
  82 003a 0394     		str	r4, [sp, #12]
 173:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  83              		.loc 1 173 3 is_stmt 1 view .LVU15
  84              		.loc 1 173 25 is_stmt 0 view .LVU16
  85 003c 0494     		str	r4, [sp, #16]
 174:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  86              		.loc 1 174 3 is_stmt 1 view .LVU17
  87 003e 01A9     		add	r1, sp, #4
  88 0040 2846     		mov	r0, r5
  89 0042 FFF7FEFF 		bl	HAL_GPIO_Init
  90              	.LVL1:
 175:Src/main.c    **** 
 176:Src/main.c    **** }
  91              		.loc 1 176 1 is_stmt 0 view .LVU18
  92 0046 07B0     		add	sp, sp, #28
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 12
  95              		@ sp needed
  96 0048 30BD     		pop	{r4, r5, pc}
  97              	.L4:
  98 004a 00BF     		.align	2
  99              	.L3:
 100 004c 00380240 		.word	1073887232
 101 0050 00000240 		.word	1073872896
 102              		.cfi_endproc
 103              	.LFE132:
 105              		.section	.text.SystemClock_Config,"ax",%progbits
 106              		.align	1
 107              		.global	SystemClock_Config
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccFp41Bs.s 			page 6


 113              	SystemClock_Config:
 114              	.LFB131:
 116:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 115              		.loc 1 116 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 80
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119 0000 30B5     		push	{r4, r5, lr}
 120              	.LCFI3:
 121              		.cfi_def_cfa_offset 12
 122              		.cfi_offset 4, -12
 123              		.cfi_offset 5, -8
 124              		.cfi_offset 14, -4
 125 0002 95B0     		sub	sp, sp, #84
 126              	.LCFI4:
 127              		.cfi_def_cfa_offset 96
 117:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 128              		.loc 1 117 3 view .LVU20
 117:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129              		.loc 1 117 22 is_stmt 0 view .LVU21
 130 0004 3022     		movs	r2, #48
 131 0006 0021     		movs	r1, #0
 132 0008 08A8     		add	r0, sp, #32
 133 000a FFF7FEFF 		bl	memset
 134              	.LVL2:
 118:Src/main.c    **** 
 135              		.loc 1 118 3 is_stmt 1 view .LVU22
 118:Src/main.c    **** 
 136              		.loc 1 118 22 is_stmt 0 view .LVU23
 137 000e 0024     		movs	r4, #0
 138 0010 0394     		str	r4, [sp, #12]
 139 0012 0494     		str	r4, [sp, #16]
 140 0014 0594     		str	r4, [sp, #20]
 141 0016 0694     		str	r4, [sp, #24]
 142 0018 0794     		str	r4, [sp, #28]
 122:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 143              		.loc 1 122 3 is_stmt 1 view .LVU24
 144              	.LBB3:
 122:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 145              		.loc 1 122 3 view .LVU25
 146 001a 0194     		str	r4, [sp, #4]
 122:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 147              		.loc 1 122 3 view .LVU26
 148 001c 1B4B     		ldr	r3, .L7
 149 001e 1A6C     		ldr	r2, [r3, #64]
 150 0020 42F08052 		orr	r2, r2, #268435456
 151 0024 1A64     		str	r2, [r3, #64]
 122:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 152              		.loc 1 122 3 view .LVU27
 153 0026 1B6C     		ldr	r3, [r3, #64]
 154 0028 03F08053 		and	r3, r3, #268435456
 155 002c 0193     		str	r3, [sp, #4]
 122:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 156              		.loc 1 122 3 view .LVU28
 157 002e 019B     		ldr	r3, [sp, #4]
 158              	.LBE3:
 123:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
ARM GAS  /tmp/ccFp41Bs.s 			page 7


 159              		.loc 1 123 3 view .LVU29
 160              	.LBB4:
 123:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 161              		.loc 1 123 3 view .LVU30
 162 0030 0294     		str	r4, [sp, #8]
 123:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 163              		.loc 1 123 3 view .LVU31
 164 0032 174A     		ldr	r2, .L7+4
 165 0034 1368     		ldr	r3, [r2]
 166 0036 23F44043 		bic	r3, r3, #49152
 167 003a 43F40043 		orr	r3, r3, #32768
 168 003e 1360     		str	r3, [r2]
 123:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 169              		.loc 1 123 3 view .LVU32
 170 0040 1368     		ldr	r3, [r2]
 171 0042 03F44043 		and	r3, r3, #49152
 172 0046 0293     		str	r3, [sp, #8]
 123:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 173              		.loc 1 123 3 view .LVU33
 174 0048 029B     		ldr	r3, [sp, #8]
 175              	.LBE4:
 126:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 176              		.loc 1 126 3 view .LVU34
 126:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 177              		.loc 1 126 36 is_stmt 0 view .LVU35
 178 004a 0225     		movs	r5, #2
 179 004c 0895     		str	r5, [sp, #32]
 127:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 180              		.loc 1 127 3 is_stmt 1 view .LVU36
 127:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 181              		.loc 1 127 30 is_stmt 0 view .LVU37
 182 004e 0123     		movs	r3, #1
 183 0050 0B93     		str	r3, [sp, #44]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 184              		.loc 1 128 3 is_stmt 1 view .LVU38
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 185              		.loc 1 128 41 is_stmt 0 view .LVU39
 186 0052 1023     		movs	r3, #16
 187 0054 0C93     		str	r3, [sp, #48]
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 188              		.loc 1 129 3 is_stmt 1 view .LVU40
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 189              		.loc 1 129 34 is_stmt 0 view .LVU41
 190 0056 0E95     		str	r5, [sp, #56]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 191              		.loc 1 130 3 is_stmt 1 view .LVU42
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 192              		.loc 1 130 35 is_stmt 0 view .LVU43
 193 0058 0F94     		str	r4, [sp, #60]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 64;
 194              		.loc 1 131 3 is_stmt 1 view .LVU44
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 64;
 195              		.loc 1 131 30 is_stmt 0 view .LVU45
 196 005a 0823     		movs	r3, #8
 197 005c 1093     		str	r3, [sp, #64]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 198              		.loc 1 132 3 is_stmt 1 view .LVU46
ARM GAS  /tmp/ccFp41Bs.s 			page 8


 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 199              		.loc 1 132 30 is_stmt 0 view .LVU47
 200 005e 4023     		movs	r3, #64
 201 0060 1193     		str	r3, [sp, #68]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 202              		.loc 1 133 3 is_stmt 1 view .LVU48
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 203              		.loc 1 133 30 is_stmt 0 view .LVU49
 204 0062 1295     		str	r5, [sp, #72]
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 205              		.loc 1 134 3 is_stmt 1 view .LVU50
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 206              		.loc 1 134 30 is_stmt 0 view .LVU51
 207 0064 0723     		movs	r3, #7
 208 0066 1393     		str	r3, [sp, #76]
 135:Src/main.c    ****   {
 209              		.loc 1 135 3 is_stmt 1 view .LVU52
 135:Src/main.c    ****   {
 210              		.loc 1 135 7 is_stmt 0 view .LVU53
 211 0068 08A8     		add	r0, sp, #32
 212 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 213              	.LVL3:
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 214              		.loc 1 141 3 is_stmt 1 view .LVU54
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 215              		.loc 1 141 31 is_stmt 0 view .LVU55
 216 006e 0F23     		movs	r3, #15
 217 0070 0393     		str	r3, [sp, #12]
 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 218              		.loc 1 143 3 is_stmt 1 view .LVU56
 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 219              		.loc 1 143 34 is_stmt 0 view .LVU57
 220 0072 0495     		str	r5, [sp, #16]
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 221              		.loc 1 144 3 is_stmt 1 view .LVU58
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 222              		.loc 1 144 35 is_stmt 0 view .LVU59
 223 0074 9023     		movs	r3, #144
 224 0076 0593     		str	r3, [sp, #20]
 145:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 225              		.loc 1 145 3 is_stmt 1 view .LVU60
 145:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 226              		.loc 1 145 36 is_stmt 0 view .LVU61
 227 0078 4FF48053 		mov	r3, #4096
 228 007c 0693     		str	r3, [sp, #24]
 146:Src/main.c    **** 
 229              		.loc 1 146 3 is_stmt 1 view .LVU62
 146:Src/main.c    **** 
 230              		.loc 1 146 36 is_stmt 0 view .LVU63
 231 007e 0794     		str	r4, [sp, #28]
 148:Src/main.c    ****   {
 232              		.loc 1 148 3 is_stmt 1 view .LVU64
 148:Src/main.c    ****   {
 233              		.loc 1 148 7 is_stmt 0 view .LVU65
 234 0080 2146     		mov	r1, r4
 235 0082 03A8     		add	r0, sp, #12
 236 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccFp41Bs.s 			page 9


 237              	.LVL4:
 152:Src/main.c    **** 
 238              		.loc 1 152 1 view .LVU66
 239 0088 15B0     		add	sp, sp, #84
 240              	.LCFI5:
 241              		.cfi_def_cfa_offset 12
 242              		@ sp needed
 243 008a 30BD     		pop	{r4, r5, pc}
 244              	.L8:
 245              		.align	2
 246              	.L7:
 247 008c 00380240 		.word	1073887232
 248 0090 00700040 		.word	1073770496
 249              		.cfi_endproc
 250              	.LFE131:
 252              		.section	.text.main,"ax",%progbits
 253              		.align	1
 254              		.global	main
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	main:
 261              	.LFB130:
  67:Src/main.c    ****   /* USER CODE BEGIN 1 */
 262              		.loc 1 67 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ Volatile: function does not return.
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              	.LCFI6:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 3, -8
 271              		.cfi_offset 14, -4
  76:Src/main.c    **** 
 272              		.loc 1 76 3 view .LVU68
 273 0002 FFF7FEFF 		bl	HAL_Init
 274              	.LVL5:
  83:Src/main.c    **** 
 275              		.loc 1 83 3 view .LVU69
 276 0006 FFF7FEFF 		bl	SystemClock_Config
 277              	.LVL6:
  90:Src/main.c    ****   /* USER CODE BEGIN 2 */
 278              		.loc 1 90 3 view .LVU70
 279 000a FFF7FEFF 		bl	MX_GPIO_Init
 280              	.LVL7:
 281              	.L10:
  97:Src/main.c    ****   {
 282              		.loc 1 97 3 discriminator 1 view .LVU71
 100:Src/main.c    ****     HAL_Delay(1000);
 283              		.loc 1 100 5 discriminator 1 view .LVU72
 284 000e 0A4C     		ldr	r4, .L12
 285 0010 0022     		movs	r2, #0
 286 0012 2021     		movs	r1, #32
 287 0014 2046     		mov	r0, r4
 288 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccFp41Bs.s 			page 10


 289              	.LVL8:
 101:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 290              		.loc 1 101 5 discriminator 1 view .LVU73
 291 001a 4FF47A70 		mov	r0, #1000
 292 001e FFF7FEFF 		bl	HAL_Delay
 293              	.LVL9:
 102:Src/main.c    ****     HAL_Delay(1000);
 294              		.loc 1 102 5 discriminator 1 view .LVU74
 295 0022 0122     		movs	r2, #1
 296 0024 2021     		movs	r1, #32
 297 0026 2046     		mov	r0, r4
 298 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 299              	.LVL10:
 103:Src/main.c    **** 
 300              		.loc 1 103 5 discriminator 1 view .LVU75
 301 002c 4FF47A70 		mov	r0, #1000
 302 0030 FFF7FEFF 		bl	HAL_Delay
 303              	.LVL11:
 304 0034 EBE7     		b	.L10
 305              	.L13:
 306 0036 00BF     		.align	2
 307              	.L12:
 308 0038 00000240 		.word	1073872896
 309              		.cfi_endproc
 310              	.LFE130:
 312              		.section	.text.Error_Handler,"ax",%progbits
 313              		.align	1
 314              		.global	Error_Handler
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	Error_Handler:
 321              	.LFB133:
 177:Src/main.c    **** 
 178:Src/main.c    **** /* USER CODE BEGIN 4 */
 179:Src/main.c    **** 
 180:Src/main.c    **** /* USER CODE END 4 */
 181:Src/main.c    **** 
 182:Src/main.c    **** /**
 183:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 184:Src/main.c    ****   * @retval None
 185:Src/main.c    ****   */
 186:Src/main.c    **** void Error_Handler(void)
 187:Src/main.c    **** {
 322              		.loc 1 187 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 188:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 189:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 190:Src/main.c    **** 
 191:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 192:Src/main.c    **** }
 327              		.loc 1 192 1 view .LVU77
 328 0000 7047     		bx	lr
ARM GAS  /tmp/ccFp41Bs.s 			page 11


 329              		.cfi_endproc
 330              	.LFE133:
 332              		.text
 333              	.Letext0:
 334              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 335              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 336              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 337              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 338              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 339              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 340              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 341              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 342              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 343              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 344              		.file 12 "<built-in>"
ARM GAS  /tmp/ccFp41Bs.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccFp41Bs.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccFp41Bs.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccFp41Bs.s:100    .text.MX_GPIO_Init:000000000000004c $d
     /tmp/ccFp41Bs.s:106    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccFp41Bs.s:113    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccFp41Bs.s:247    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccFp41Bs.s:253    .text.main:0000000000000000 $t
     /tmp/ccFp41Bs.s:260    .text.main:0000000000000000 main
     /tmp/ccFp41Bs.s:308    .text.main:0000000000000038 $d
     /tmp/ccFp41Bs.s:313    .text.Error_Handler:0000000000000000 $t
     /tmp/ccFp41Bs.s:320    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
